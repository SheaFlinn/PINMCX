"""REBUILD: fixed circular import and schema

Revision ID: 3278baddaba3
Revises: 
Create Date: 2025-06-28 22:27:41.840707

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3278baddaba3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anchored_hashes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash_value', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('headline', sa.String(length=500), nullable=False),
    sa.Column('original_headline', sa.String(length=500), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('league_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leagues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liquidity_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('provided_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news_headlines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platform_wallets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('liquidity_buffer_deposit', sa.Float(), nullable=True),
    sa.Column('reliability_index', sa.Float(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('longest_streak', sa.Integer(), nullable=True),
    sa.Column('last_check_in_date', sa.DateTime(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('predictions_count', sa.Integer(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user_badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('amm_markets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('base_pool', sa.Float(), nullable=True),
    sa.Column('quote_pool', sa.Float(), nullable=True),
    sa.Column('total_shares_yes', sa.Float(), nullable=True),
    sa.Column('total_shares_no', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liquidity_pools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('cap', sa.Float(), nullable=False),
    sa.Column('current_liquidity', sa.Float(), nullable=False),
    sa.Column('max_liquidity', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resolution_date', sa.DateTime(), nullable=True),
    sa.Column('prediction_deadline', sa.DateTime(), nullable=True),
    sa.Column('resolution_method', sa.String(length=64), nullable=True),
    sa.Column('resolution_deadline', sa.DateTime(), nullable=True),
    sa.Column('outcome', sa.String(length=32), nullable=True),
    sa.Column('domain', sa.String(length=128), nullable=True),
    sa.Column('yes_pool', sa.Float(), nullable=True),
    sa.Column('no_pool', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('original_date', sa.DateTime(), nullable=True),
    sa.Column('original_headline', sa.String(length=256), nullable=True),
    sa.Column('original_source', sa.String(length=128), nullable=True),
    sa.Column('source_url', sa.String(length=256), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(), nullable=True),
    sa.Column('refined_at', sa.DateTime(), nullable=True),
    sa.Column('refined_by', sa.String(length=128), nullable=True),
    sa.Column('liquidity_pool_id', sa.Integer(), nullable=True),
    sa.Column('contract_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], ),
    sa.ForeignKeyConstraint(['liquidity_pool_id'], ['liquidity_pools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('prediction_type', sa.String(length=32), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=True),
    sa.Column('has_awarded_xp', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('predictions')
    op.drop_table('market')
    op.drop_table('liquidity_pools')
    op.drop_table('amm_markets')
    op.drop_table('user_badges')
    op.drop_table('user')
    op.drop_table('platform_wallets')
    op.drop_table('news_sources')
    op.drop_table('news_headlines')
    op.drop_table('market_events')
    op.drop_table('liquidity_providers')
    op.drop_table('leagues')
    op.drop_table('league_members')
    op.drop_table('contract')
    op.drop_table('badges')
    op.drop_table('anchored_hashes')
    # ### end Alembic commands ###
