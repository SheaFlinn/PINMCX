"""add back_populates liquidity_pool

Revision ID: 50bbaa2eda7e
Revises: 3278baddaba3
Create Date: 2025-06-28 23:00:08.224025

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '50bbaa2eda7e'
down_revision = '3278baddaba3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('market', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contract_hash', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('deadline', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('resolved_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('platform_fee', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('liquidity_fee', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('liquidity_provider_shares', sa.Float(), nullable=True))
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=256),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('outcome',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=10),
               existing_nullable=True)
        batch_op.create_unique_constraint('uq_market_contract_hash', ['contract_hash'])
        batch_op.create_foreign_key('fk_market_creator_id_user', 'user', ['creator_id'], ['id'])
        batch_op.drop_column('refined_by')
        batch_op.drop_column('scraped_at')
        batch_op.drop_column('refined_at')
        batch_op.drop_column('original_headline')
        batch_op.drop_column('yes_pool')
        batch_op.drop_column('original_date')
        batch_op.drop_column('created_at')
        batch_op.drop_column('no_pool')
        batch_op.drop_column('domain')
        batch_op.drop_column('resolution_date')
        batch_op.drop_column('resolution_deadline')
        batch_op.drop_column('original_source')
        batch_op.drop_column('source_url')
        batch_op.drop_column('prediction_deadline')
        batch_op.drop_column('approved_at')
        batch_op.drop_column('resolution_method')
        batch_op.drop_column('name')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('market_events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('market_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('description', sa.String(length=256), nullable=True))
        batch_op.add_column(sa.Column('event_data', sa.JSON(), nullable=True))
        batch_op.create_foreign_key('fk_market_events_market_id_market', 'market', ['market_id'], ['id'])
        batch_op.drop_column('contract_id')

    with op.batch_alter_table('predictions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('outcome', sa.String(length=10), nullable=False))
        batch_op.add_column(sa.Column('confidence', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('stake', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('timestamp', sa.DateTime(), nullable=True))
        batch_op.drop_column('has_awarded_xp')
        batch_op.drop_column('amount')
        batch_op.drop_column('fee')
        batch_op.drop_column('is_resolved')
        batch_op.drop_column('created_at')
        batch_op.drop_column('prediction_type')
        batch_op.drop_column('updated_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('predictions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('prediction_type', sa.VARCHAR(length=32), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('is_resolved', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('fee', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('amount', sa.FLOAT(), nullable=False))
        batch_op.add_column(sa.Column('has_awarded_xp', sa.BOOLEAN(), nullable=True))
        batch_op.drop_column('timestamp')
        batch_op.drop_column('stake')
        batch_op.drop_column('confidence')
        batch_op.drop_column('outcome')

    with op.batch_alter_table('market_events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contract_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint('fk_market_events_market_id_market', type_='foreignkey')
        batch_op.drop_column('event_data')
        batch_op.drop_column('description')
        batch_op.drop_column('market_id')

    with op.batch_alter_table('market', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=256), nullable=True))
        batch_op.add_column(sa.Column('resolution_method', sa.VARCHAR(length=64), nullable=True))
        batch_op.add_column(sa.Column('approved_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('prediction_deadline', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('source_url', sa.VARCHAR(length=256), nullable=True))
        batch_op.add_column(sa.Column('original_source', sa.VARCHAR(length=128), nullable=True))
        batch_op.add_column(sa.Column('resolution_deadline', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('resolution_date', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('domain', sa.VARCHAR(length=128), nullable=True))
        batch_op.add_column(sa.Column('no_pool', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('original_date', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('yes_pool', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('original_headline', sa.VARCHAR(length=256), nullable=True))
        batch_op.add_column(sa.Column('refined_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('scraped_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('refined_by', sa.VARCHAR(length=128), nullable=True))
        batch_op.drop_constraint('fk_market_creator_id_user', type_='foreignkey')
        batch_op.drop_constraint('uq_market_contract_hash', type_='unique')
        batch_op.alter_column('outcome',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=256),
               existing_nullable=False)
        batch_op.drop_column('liquidity_provider_shares')
        batch_op.drop_column('status')
        batch_op.drop_column('liquidity_fee')
        batch_op.drop_column('platform_fee')
        batch_op.drop_column('creator_id')
        batch_op.drop_column('resolved_at')
        batch_op.drop_column('deadline')
        batch_op.drop_column('contract_hash')

    # ### end Alembic commands ###
