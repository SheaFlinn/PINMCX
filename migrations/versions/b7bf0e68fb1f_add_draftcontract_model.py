"""Add DraftContract model

Revision ID: b7bf0e68fb1f
Revises: 88825c9760ed
Create Date: 2025-07-04 13:47:17.988293

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b7bf0e68fb1f'
down_revision = '88825c9760ed'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract_drafts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('purpose', sa.Text(), nullable=True),
    sa.Column('scope', sa.Text(), nullable=True),
    sa.Column('terms', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leagues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('selector', sa.String(length=100), nullable=False),
    sa.Column('date_selector', sa.String(length=100), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platform_wallet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('lb_deposit', sa.Float(), nullable=True),
    sa.Column('reliability_index', sa.Float(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('longest_streak', sa.Integer(), nullable=True),
    sa.Column('last_check_in_date', sa.DateTime(), nullable=True),
    sa.Column('predictions_count', sa.Integer(), nullable=True),
    sa.Column('successful_predictions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('league_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('resolution_date', sa.DateTime(), nullable=False),
    sa.Column('resolution_method', sa.Text(), nullable=False),
    sa.Column('source_url', sa.String(length=200), nullable=True),
    sa.Column('domain', sa.String(length=50), nullable=True),
    sa.Column('parent_market_id', sa.Integer(), nullable=True),
    sa.Column('original_source', sa.String(length=200), nullable=True),
    sa.Column('original_headline', sa.String(length=200), nullable=True),
    sa.Column('original_date', sa.DateTime(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(), nullable=True),
    sa.Column('refined_by', sa.Integer(), nullable=True),
    sa.Column('refined_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('domain_tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('resolved_outcome', sa.String(length=3), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('yes_pool', sa.Float(), nullable=True),
    sa.Column('no_pool', sa.Float(), nullable=True),
    sa.Column('liquidity_pool', sa.Float(), nullable=True),
    sa.Column('liquidity_provider_shares', sa.Float(), nullable=True),
    sa.Column('liquidity_fee', sa.Float(), nullable=True),
    sa.Column('prediction_deadline', sa.DateTime(), nullable=True),
    sa.Column('resolution_deadline', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['refined_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news_headline',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['news_source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('published_contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('draft_id', sa.Integer(), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('actor', sa.String(length=128), nullable=True),
    sa.Column('resolution_method', sa.String(length=256), nullable=True),
    sa.Column('source_url', sa.String(length=512), nullable=True),
    sa.Column('resolution_date', sa.DateTime(), nullable=True),
    sa.Column('current_odds_yes', sa.Float(), nullable=True),
    sa.Column('current_odds_no', sa.Float(), nullable=True),
    sa.Column('xp_threshold', sa.Integer(), nullable=True),
    sa.Column('total_volume_points', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['draft_id'], ['contract_drafts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('awarded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_ledger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('amm_markets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('base_pool', sa.Float(), nullable=True),
    sa.Column('quote_pool', sa.Float(), nullable=True),
    sa.Column('total_shares_yes', sa.Float(), nullable=True),
    sa.Column('total_shares_no', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['published_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liquidity_pools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('max_liquidity', sa.Integer(), nullable=False),
    sa.Column('current_liquidity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['market.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contract_id')
    )
    op.create_table('liquidity_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('contributed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prediction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('shares', sa.Float(), nullable=False),
    sa.Column('shares_purchased', sa.Float(), nullable=False),
    sa.Column('platform_fee', sa.Float(), nullable=True),
    sa.Column('outcome', sa.Boolean(), nullable=False),
    sa.Column('used_liquidity_buffer', sa.Boolean(), nullable=True),
    sa.Column('stake', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('awarded_points', sa.Integer(), nullable=False),
    sa.Column('awarded_xp', sa.Integer(), nullable=False),
    sa.Column('xp_awarded', sa.Boolean(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prediction')
    op.drop_table('market_event')
    op.drop_table('liquidity_providers')
    op.drop_table('liquidity_pools')
    op.drop_table('amm_markets')
    op.drop_table('user_ledger')
    op.drop_table('user_badges')
    op.drop_table('published_contracts')
    op.drop_table('news_headline')
    op.drop_table('market')
    op.drop_table('league_members')
    op.drop_table('user')
    op.drop_table('platform_wallet')
    op.drop_table('news_source')
    op.drop_table('leagues')
    op.drop_table('contract_drafts')
    op.drop_table('badges')
    # ### end Alembic commands ###
