"""Add missing user fields

Revision ID: 4dc044be0665
Revises: 
Create Date: 2025-06-23 20:40:35.094313

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4dc044be0665'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('league',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('update_interval', sa.Integer(), nullable=True),
    sa.Column('min_points', sa.Integer(), nullable=True),
    sa.Column('max_members', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('selector', sa.String(length=100), nullable=False),
    sa.Column('date_selector', sa.String(length=100), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('domain_tag', sa.String(length=50), nullable=True),
    sa.Column('source_weight', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('dummy_field', sa.String(length=50), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('lb_deposit', sa.Float(), nullable=True),
    sa.Column('reliability_index', sa.Float(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('longest_streak', sa.Integer(), nullable=True),
    sa.Column('last_check_in_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('league_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['league.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('league_id', 'user_id', name='_league_user_uc')
    )
    op.create_table('market',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('resolution_date', sa.DateTime(), nullable=False),
    sa.Column('resolution_method', sa.Text(), nullable=False),
    sa.Column('source_url', sa.String(length=200), nullable=True),
    sa.Column('domain', sa.String(length=50), nullable=True),
    sa.Column('parent_market_id', sa.Integer(), nullable=True),
    sa.Column('original_source', sa.String(length=200), nullable=True),
    sa.Column('original_headline', sa.String(length=200), nullable=True),
    sa.Column('original_date', sa.DateTime(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(), nullable=True),
    sa.Column('refined_by', sa.Integer(), nullable=True),
    sa.Column('refined_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('domain_tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('resolved_outcome', sa.String(length=3), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('yes_pool', sa.Float(), nullable=True),
    sa.Column('no_pool', sa.Float(), nullable=True),
    sa.Column('liquidity_pool', sa.Float(), nullable=True),
    sa.Column('liquidity_provider_shares', sa.Float(), nullable=True),
    sa.Column('liquidity_fee', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['parent_market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['refined_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_badge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('awarded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badge.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('anchored_hash',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('anchored_at', sa.DateTime(), nullable=True),
    sa.Column('chain_name', sa.String(length=50), nullable=True),
    sa.Column('tx_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liquidity_provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('shares', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prediction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('prediction', sa.String(length=3), nullable=False),
    sa.Column('shares', sa.Float(), nullable=True),
    sa.Column('average_price', sa.Float(), nullable=True),
    sa.Column('payout', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prediction')
    op.drop_table('market_event')
    op.drop_table('liquidity_provider')
    op.drop_table('anchored_hash')
    op.drop_table('user_badge')
    op.drop_table('market')
    op.drop_table('league_member')
    op.drop_table('user')
    op.drop_table('news_source')
    op.drop_table('league')
    op.drop_table('badge')
    # ### end Alembic commands ###
